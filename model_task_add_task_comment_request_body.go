/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TaskAddTaskCommentRequestBody struct for TaskAddTaskCommentRequestBody
type TaskAddTaskCommentRequestBody struct {
	// comment content
	CommentContent string `json:"commentContent"`
}

// NewTaskAddTaskCommentRequestBody instantiates a new TaskAddTaskCommentRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskAddTaskCommentRequestBody(commentContent string) *TaskAddTaskCommentRequestBody {
	this := TaskAddTaskCommentRequestBody{}
	this.CommentContent = commentContent
	return &this
}

// NewTaskAddTaskCommentRequestBodyWithDefaults instantiates a new TaskAddTaskCommentRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskAddTaskCommentRequestBodyWithDefaults() *TaskAddTaskCommentRequestBody {
	this := TaskAddTaskCommentRequestBody{}
	return &this
}

// GetCommentContent returns the CommentContent field value
func (o *TaskAddTaskCommentRequestBody) GetCommentContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommentContent
}

// GetCommentContentOk returns a tuple with the CommentContent field value
// and a boolean to check if the value has been set.
func (o *TaskAddTaskCommentRequestBody) GetCommentContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommentContent, true
}

// SetCommentContent sets field value
func (o *TaskAddTaskCommentRequestBody) SetCommentContent(v string) {
	o.CommentContent = v
}

func (o TaskAddTaskCommentRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["commentContent"] = o.CommentContent
	}
	return json.Marshal(toSerialize)
}

type NullableTaskAddTaskCommentRequestBody struct {
	value *TaskAddTaskCommentRequestBody
	isSet bool
}

func (v NullableTaskAddTaskCommentRequestBody) Get() *TaskAddTaskCommentRequestBody {
	return v.value
}

func (v *NullableTaskAddTaskCommentRequestBody) Set(val *TaskAddTaskCommentRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskAddTaskCommentRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskAddTaskCommentRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskAddTaskCommentRequestBody(val *TaskAddTaskCommentRequestBody) *NullableTaskAddTaskCommentRequestBody {
	return &NullableTaskAddTaskCommentRequestBody{value: val, isSet: true}
}

func (v NullableTaskAddTaskCommentRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskAddTaskCommentRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


