/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// RoleUpdateRoleResponseBody struct for RoleUpdateRoleResponseBody
type RoleUpdateRoleResponseBody struct {
	// AllTaskCount of server role
	AllTaskCount *int64 `json:"allTaskCount,omitempty"`
	// created time of server role
	CreatedAt time.Time `json:"createdAt"`
	// envMetricV2s of server role
	EnvMetricV2s []EnvMetricV2ResponseBody `json:"envMetricV2s,omitempty"`
	// envMetricV3s of server role
	EnvMetricV3s []EnvMetricV3ResponseBody `json:"envMetricV3s,omitempty"`
	// ID of server role
	Id int64 `json:"id"`
	// isDefault of server role
	IsDefault *bool `json:"isDefault,omitempty"`
	// Name of server role
	Name string `json:"name"`
	// NewTaskCount of server role
	NewTaskCount *int64 `json:"newTaskCount,omitempty"`
	SecMetric *SecMetricResponseBody `json:"secMetric,omitempty"`
	// Servers of server role
	Servers []ServerChildResponseBody `json:"servers,omitempty"`
	// updated time of server role
	UpdatedAt time.Time `json:"updatedAt"`
}

// NewRoleUpdateRoleResponseBody instantiates a new RoleUpdateRoleResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleUpdateRoleResponseBody(createdAt time.Time, id int64, name string, updatedAt time.Time) *RoleUpdateRoleResponseBody {
	this := RoleUpdateRoleResponseBody{}
	this.CreatedAt = createdAt
	this.Id = id
	this.Name = name
	this.UpdatedAt = updatedAt
	return &this
}

// NewRoleUpdateRoleResponseBodyWithDefaults instantiates a new RoleUpdateRoleResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleUpdateRoleResponseBodyWithDefaults() *RoleUpdateRoleResponseBody {
	this := RoleUpdateRoleResponseBody{}
	return &this
}

// GetAllTaskCount returns the AllTaskCount field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetAllTaskCount() int64 {
	if o == nil || o.AllTaskCount == nil {
		var ret int64
		return ret
	}
	return *o.AllTaskCount
}

// GetAllTaskCountOk returns a tuple with the AllTaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetAllTaskCountOk() (*int64, bool) {
	if o == nil || o.AllTaskCount == nil {
		return nil, false
	}
	return o.AllTaskCount, true
}

// HasAllTaskCount returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasAllTaskCount() bool {
	if o != nil && o.AllTaskCount != nil {
		return true
	}

	return false
}

// SetAllTaskCount gets a reference to the given int64 and assigns it to the AllTaskCount field.
func (o *RoleUpdateRoleResponseBody) SetAllTaskCount(v int64) {
	o.AllTaskCount = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *RoleUpdateRoleResponseBody) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *RoleUpdateRoleResponseBody) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEnvMetricV2s returns the EnvMetricV2s field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetEnvMetricV2s() []EnvMetricV2ResponseBody {
	if o == nil || o.EnvMetricV2s == nil {
		var ret []EnvMetricV2ResponseBody
		return ret
	}
	return o.EnvMetricV2s
}

// GetEnvMetricV2sOk returns a tuple with the EnvMetricV2s field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetEnvMetricV2sOk() ([]EnvMetricV2ResponseBody, bool) {
	if o == nil || o.EnvMetricV2s == nil {
		return nil, false
	}
	return o.EnvMetricV2s, true
}

// HasEnvMetricV2s returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasEnvMetricV2s() bool {
	if o != nil && o.EnvMetricV2s != nil {
		return true
	}

	return false
}

// SetEnvMetricV2s gets a reference to the given []EnvMetricV2ResponseBody and assigns it to the EnvMetricV2s field.
func (o *RoleUpdateRoleResponseBody) SetEnvMetricV2s(v []EnvMetricV2ResponseBody) {
	o.EnvMetricV2s = v
}

// GetEnvMetricV3s returns the EnvMetricV3s field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetEnvMetricV3s() []EnvMetricV3ResponseBody {
	if o == nil || o.EnvMetricV3s == nil {
		var ret []EnvMetricV3ResponseBody
		return ret
	}
	return o.EnvMetricV3s
}

// GetEnvMetricV3sOk returns a tuple with the EnvMetricV3s field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetEnvMetricV3sOk() ([]EnvMetricV3ResponseBody, bool) {
	if o == nil || o.EnvMetricV3s == nil {
		return nil, false
	}
	return o.EnvMetricV3s, true
}

// HasEnvMetricV3s returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasEnvMetricV3s() bool {
	if o != nil && o.EnvMetricV3s != nil {
		return true
	}

	return false
}

// SetEnvMetricV3s gets a reference to the given []EnvMetricV3ResponseBody and assigns it to the EnvMetricV3s field.
func (o *RoleUpdateRoleResponseBody) SetEnvMetricV3s(v []EnvMetricV3ResponseBody) {
	o.EnvMetricV3s = v
}

// GetId returns the Id field value
func (o *RoleUpdateRoleResponseBody) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RoleUpdateRoleResponseBody) SetId(v int64) {
	o.Id = v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *RoleUpdateRoleResponseBody) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetName returns the Name field value
func (o *RoleUpdateRoleResponseBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoleUpdateRoleResponseBody) SetName(v string) {
	o.Name = v
}

// GetNewTaskCount returns the NewTaskCount field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetNewTaskCount() int64 {
	if o == nil || o.NewTaskCount == nil {
		var ret int64
		return ret
	}
	return *o.NewTaskCount
}

// GetNewTaskCountOk returns a tuple with the NewTaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetNewTaskCountOk() (*int64, bool) {
	if o == nil || o.NewTaskCount == nil {
		return nil, false
	}
	return o.NewTaskCount, true
}

// HasNewTaskCount returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasNewTaskCount() bool {
	if o != nil && o.NewTaskCount != nil {
		return true
	}

	return false
}

// SetNewTaskCount gets a reference to the given int64 and assigns it to the NewTaskCount field.
func (o *RoleUpdateRoleResponseBody) SetNewTaskCount(v int64) {
	o.NewTaskCount = &v
}

// GetSecMetric returns the SecMetric field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetSecMetric() SecMetricResponseBody {
	if o == nil || o.SecMetric == nil {
		var ret SecMetricResponseBody
		return ret
	}
	return *o.SecMetric
}

// GetSecMetricOk returns a tuple with the SecMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetSecMetricOk() (*SecMetricResponseBody, bool) {
	if o == nil || o.SecMetric == nil {
		return nil, false
	}
	return o.SecMetric, true
}

// HasSecMetric returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasSecMetric() bool {
	if o != nil && o.SecMetric != nil {
		return true
	}

	return false
}

// SetSecMetric gets a reference to the given SecMetricResponseBody and assigns it to the SecMetric field.
func (o *RoleUpdateRoleResponseBody) SetSecMetric(v SecMetricResponseBody) {
	o.SecMetric = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *RoleUpdateRoleResponseBody) GetServers() []ServerChildResponseBody {
	if o == nil || o.Servers == nil {
		var ret []ServerChildResponseBody
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetServersOk() ([]ServerChildResponseBody, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *RoleUpdateRoleResponseBody) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []ServerChildResponseBody and assigns it to the Servers field.
func (o *RoleUpdateRoleResponseBody) SetServers(v []ServerChildResponseBody) {
	o.Servers = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *RoleUpdateRoleResponseBody) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *RoleUpdateRoleResponseBody) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *RoleUpdateRoleResponseBody) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o RoleUpdateRoleResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllTaskCount != nil {
		toSerialize["allTaskCount"] = o.AllTaskCount
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.EnvMetricV2s != nil {
		toSerialize["envMetricV2s"] = o.EnvMetricV2s
	}
	if o.EnvMetricV3s != nil {
		toSerialize["envMetricV3s"] = o.EnvMetricV3s
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.NewTaskCount != nil {
		toSerialize["newTaskCount"] = o.NewTaskCount
	}
	if o.SecMetric != nil {
		toSerialize["secMetric"] = o.SecMetric
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableRoleUpdateRoleResponseBody struct {
	value *RoleUpdateRoleResponseBody
	isSet bool
}

func (v NullableRoleUpdateRoleResponseBody) Get() *RoleUpdateRoleResponseBody {
	return v.value
}

func (v *NullableRoleUpdateRoleResponseBody) Set(val *RoleUpdateRoleResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleUpdateRoleResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleUpdateRoleResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleUpdateRoleResponseBody(val *RoleUpdateRoleResponseBody) *NullableRoleUpdateRoleResponseBody {
	return &NullableRoleUpdateRoleResponseBody{value: val, isSet: true}
}

func (v NullableRoleUpdateRoleResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleUpdateRoleResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


