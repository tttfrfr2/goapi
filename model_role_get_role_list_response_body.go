/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoleGetRoleListResponseBody struct for RoleGetRoleListResponseBody
type RoleGetRoleListResponseBody struct {
	Paging *PagingResponseBody `json:"paging,omitempty"`
	// ServerRole list
	Roles []RoleListResponseBody `json:"roles,omitempty"`
}

// NewRoleGetRoleListResponseBody instantiates a new RoleGetRoleListResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleGetRoleListResponseBody() *RoleGetRoleListResponseBody {
	this := RoleGetRoleListResponseBody{}
	return &this
}

// NewRoleGetRoleListResponseBodyWithDefaults instantiates a new RoleGetRoleListResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleGetRoleListResponseBodyWithDefaults() *RoleGetRoleListResponseBody {
	this := RoleGetRoleListResponseBody{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *RoleGetRoleListResponseBody) GetPaging() PagingResponseBody {
	if o == nil || o.Paging == nil {
		var ret PagingResponseBody
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleGetRoleListResponseBody) GetPagingOk() (*PagingResponseBody, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *RoleGetRoleListResponseBody) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PagingResponseBody and assigns it to the Paging field.
func (o *RoleGetRoleListResponseBody) SetPaging(v PagingResponseBody) {
	o.Paging = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *RoleGetRoleListResponseBody) GetRoles() []RoleListResponseBody {
	if o == nil || o.Roles == nil {
		var ret []RoleListResponseBody
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleGetRoleListResponseBody) GetRolesOk() ([]RoleListResponseBody, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *RoleGetRoleListResponseBody) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []RoleListResponseBody and assigns it to the Roles field.
func (o *RoleGetRoleListResponseBody) SetRoles(v []RoleListResponseBody) {
	o.Roles = v
}

func (o RoleGetRoleListResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableRoleGetRoleListResponseBody struct {
	value *RoleGetRoleListResponseBody
	isSet bool
}

func (v NullableRoleGetRoleListResponseBody) Get() *RoleGetRoleListResponseBody {
	return v.value
}

func (v *NullableRoleGetRoleListResponseBody) Set(val *RoleGetRoleListResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleGetRoleListResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleGetRoleListResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleGetRoleListResponseBody(val *RoleGetRoleListResponseBody) *NullableRoleGetRoleListResponseBody {
	return &NullableRoleGetRoleListResponseBody{value: val, isSet: true}
}

func (v NullableRoleGetRoleListResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleGetRoleListResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


