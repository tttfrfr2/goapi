/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LockfileAddLockfileRequestBody struct for LockfileAddLockfileRequestBody
type LockfileAddLockfileRequestBody struct {
	// fileContent of the lockfile
	FileContent string `json:"fileContent"`
	// Path of lockfile
	Path string `json:"path"`
	// ServerID
	ServerID int64 `json:"serverID"`
}

// NewLockfileAddLockfileRequestBody instantiates a new LockfileAddLockfileRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockfileAddLockfileRequestBody(fileContent string, path string, serverID int64) *LockfileAddLockfileRequestBody {
	this := LockfileAddLockfileRequestBody{}
	this.FileContent = fileContent
	this.Path = path
	this.ServerID = serverID
	return &this
}

// NewLockfileAddLockfileRequestBodyWithDefaults instantiates a new LockfileAddLockfileRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockfileAddLockfileRequestBodyWithDefaults() *LockfileAddLockfileRequestBody {
	this := LockfileAddLockfileRequestBody{}
	return &this
}

// GetFileContent returns the FileContent field value
func (o *LockfileAddLockfileRequestBody) GetFileContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileContent
}

// GetFileContentOk returns a tuple with the FileContent field value
// and a boolean to check if the value has been set.
func (o *LockfileAddLockfileRequestBody) GetFileContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileContent, true
}

// SetFileContent sets field value
func (o *LockfileAddLockfileRequestBody) SetFileContent(v string) {
	o.FileContent = v
}

// GetPath returns the Path field value
func (o *LockfileAddLockfileRequestBody) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *LockfileAddLockfileRequestBody) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *LockfileAddLockfileRequestBody) SetPath(v string) {
	o.Path = v
}

// GetServerID returns the ServerID field value
func (o *LockfileAddLockfileRequestBody) GetServerID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServerID
}

// GetServerIDOk returns a tuple with the ServerID field value
// and a boolean to check if the value has been set.
func (o *LockfileAddLockfileRequestBody) GetServerIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerID, true
}

// SetServerID sets field value
func (o *LockfileAddLockfileRequestBody) SetServerID(v int64) {
	o.ServerID = v
}

func (o LockfileAddLockfileRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fileContent"] = o.FileContent
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["serverID"] = o.ServerID
	}
	return json.Marshal(toSerialize)
}

type NullableLockfileAddLockfileRequestBody struct {
	value *LockfileAddLockfileRequestBody
	isSet bool
}

func (v NullableLockfileAddLockfileRequestBody) Get() *LockfileAddLockfileRequestBody {
	return v.value
}

func (v *NullableLockfileAddLockfileRequestBody) Set(val *LockfileAddLockfileRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableLockfileAddLockfileRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableLockfileAddLockfileRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockfileAddLockfileRequestBody(val *LockfileAddLockfileRequestBody) *NullableLockfileAddLockfileRequestBody {
	return &NullableLockfileAddLockfileRequestBody{value: val, isSet: true}
}

func (v NullableLockfileAddLockfileRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockfileAddLockfileRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


