/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PkgCpeAddCpeRequestBody struct for PkgCpeAddCpeRequestBody
type PkgCpeAddCpeRequestBody struct {
	// Cpe Name(cpe uri or cpe format string)
	CpeName string `json:"cpeName"`
	// isURI specifies whether cpeName is in URI format or FormatString format.
	IsURI *bool `json:"isURI,omitempty"`
	// ServerID
	ServerID int64 `json:"serverID"`
}

// NewPkgCpeAddCpeRequestBody instantiates a new PkgCpeAddCpeRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkgCpeAddCpeRequestBody(cpeName string, serverID int64) *PkgCpeAddCpeRequestBody {
	this := PkgCpeAddCpeRequestBody{}
	this.CpeName = cpeName
	var isURI bool = true
	this.IsURI = &isURI
	this.ServerID = serverID
	return &this
}

// NewPkgCpeAddCpeRequestBodyWithDefaults instantiates a new PkgCpeAddCpeRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkgCpeAddCpeRequestBodyWithDefaults() *PkgCpeAddCpeRequestBody {
	this := PkgCpeAddCpeRequestBody{}
	var isURI bool = true
	this.IsURI = &isURI
	return &this
}

// GetCpeName returns the CpeName field value
func (o *PkgCpeAddCpeRequestBody) GetCpeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CpeName
}

// GetCpeNameOk returns a tuple with the CpeName field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeRequestBody) GetCpeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpeName, true
}

// SetCpeName sets field value
func (o *PkgCpeAddCpeRequestBody) SetCpeName(v string) {
	o.CpeName = v
}

// GetIsURI returns the IsURI field value if set, zero value otherwise.
func (o *PkgCpeAddCpeRequestBody) GetIsURI() bool {
	if o == nil || o.IsURI == nil {
		var ret bool
		return ret
	}
	return *o.IsURI
}

// GetIsURIOk returns a tuple with the IsURI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeRequestBody) GetIsURIOk() (*bool, bool) {
	if o == nil || o.IsURI == nil {
		return nil, false
	}
	return o.IsURI, true
}

// HasIsURI returns a boolean if a field has been set.
func (o *PkgCpeAddCpeRequestBody) HasIsURI() bool {
	if o != nil && o.IsURI != nil {
		return true
	}

	return false
}

// SetIsURI gets a reference to the given bool and assigns it to the IsURI field.
func (o *PkgCpeAddCpeRequestBody) SetIsURI(v bool) {
	o.IsURI = &v
}

// GetServerID returns the ServerID field value
func (o *PkgCpeAddCpeRequestBody) GetServerID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServerID
}

// GetServerIDOk returns a tuple with the ServerID field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeRequestBody) GetServerIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerID, true
}

// SetServerID sets field value
func (o *PkgCpeAddCpeRequestBody) SetServerID(v int64) {
	o.ServerID = v
}

func (o PkgCpeAddCpeRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cpeName"] = o.CpeName
	}
	if o.IsURI != nil {
		toSerialize["isURI"] = o.IsURI
	}
	if true {
		toSerialize["serverID"] = o.ServerID
	}
	return json.Marshal(toSerialize)
}

type NullablePkgCpeAddCpeRequestBody struct {
	value *PkgCpeAddCpeRequestBody
	isSet bool
}

func (v NullablePkgCpeAddCpeRequestBody) Get() *PkgCpeAddCpeRequestBody {
	return v.value
}

func (v *NullablePkgCpeAddCpeRequestBody) Set(val *PkgCpeAddCpeRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePkgCpeAddCpeRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePkgCpeAddCpeRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkgCpeAddCpeRequestBody(val *PkgCpeAddCpeRequestBody) *NullablePkgCpeAddCpeRequestBody {
	return &NullablePkgCpeAddCpeRequestBody{value: val, isSet: true}
}

func (v NullablePkgCpeAddCpeRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkgCpeAddCpeRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


