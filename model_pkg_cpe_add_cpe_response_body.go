/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PkgCpeAddCpeResponseBody struct for PkgCpeAddCpeResponseBody
type PkgCpeAddCpeResponseBody struct {
	// Cpe URI of cpe
	CpeURI *string `json:"cpeURI,omitempty"`
	// crated time of package or cpe
	CreatedAt time.Time `json:"createdAt"`
	// ID of package or cpe
	Id int64 `json:"id"`
	// Name of package or cpe
	Name string `json:"name"`
	// Release of package
	Release *string `json:"release,omitempty"`
	Server ServerChildResponseBody `json:"server"`
	// updated time of server
	Tasks []ChildTaskResponseBody `json:"tasks,omitempty"`
	// updated time of package or cpe
	UpdatedAt time.Time `json:"updatedAt"`
	// Version of package or cpe
	Version string `json:"version"`
}

// NewPkgCpeAddCpeResponseBody instantiates a new PkgCpeAddCpeResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkgCpeAddCpeResponseBody(createdAt time.Time, id int64, name string, server ServerChildResponseBody, updatedAt time.Time, version string) *PkgCpeAddCpeResponseBody {
	this := PkgCpeAddCpeResponseBody{}
	this.CreatedAt = createdAt
	this.Id = id
	this.Name = name
	this.Server = server
	this.UpdatedAt = updatedAt
	this.Version = version
	return &this
}

// NewPkgCpeAddCpeResponseBodyWithDefaults instantiates a new PkgCpeAddCpeResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkgCpeAddCpeResponseBodyWithDefaults() *PkgCpeAddCpeResponseBody {
	this := PkgCpeAddCpeResponseBody{}
	return &this
}

// GetCpeURI returns the CpeURI field value if set, zero value otherwise.
func (o *PkgCpeAddCpeResponseBody) GetCpeURI() string {
	if o == nil || o.CpeURI == nil {
		var ret string
		return ret
	}
	return *o.CpeURI
}

// GetCpeURIOk returns a tuple with the CpeURI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetCpeURIOk() (*string, bool) {
	if o == nil || o.CpeURI == nil {
		return nil, false
	}
	return o.CpeURI, true
}

// HasCpeURI returns a boolean if a field has been set.
func (o *PkgCpeAddCpeResponseBody) HasCpeURI() bool {
	if o != nil && o.CpeURI != nil {
		return true
	}

	return false
}

// SetCpeURI gets a reference to the given string and assigns it to the CpeURI field.
func (o *PkgCpeAddCpeResponseBody) SetCpeURI(v string) {
	o.CpeURI = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PkgCpeAddCpeResponseBody) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PkgCpeAddCpeResponseBody) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *PkgCpeAddCpeResponseBody) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PkgCpeAddCpeResponseBody) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PkgCpeAddCpeResponseBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PkgCpeAddCpeResponseBody) SetName(v string) {
	o.Name = v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *PkgCpeAddCpeResponseBody) GetRelease() string {
	if o == nil || o.Release == nil {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetReleaseOk() (*string, bool) {
	if o == nil || o.Release == nil {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *PkgCpeAddCpeResponseBody) HasRelease() bool {
	if o != nil && o.Release != nil {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *PkgCpeAddCpeResponseBody) SetRelease(v string) {
	o.Release = &v
}

// GetServer returns the Server field value
func (o *PkgCpeAddCpeResponseBody) GetServer() ServerChildResponseBody {
	if o == nil {
		var ret ServerChildResponseBody
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetServerOk() (*ServerChildResponseBody, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Server, true
}

// SetServer sets field value
func (o *PkgCpeAddCpeResponseBody) SetServer(v ServerChildResponseBody) {
	o.Server = v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *PkgCpeAddCpeResponseBody) GetTasks() []ChildTaskResponseBody {
	if o == nil || o.Tasks == nil {
		var ret []ChildTaskResponseBody
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetTasksOk() ([]ChildTaskResponseBody, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *PkgCpeAddCpeResponseBody) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []ChildTaskResponseBody and assigns it to the Tasks field.
func (o *PkgCpeAddCpeResponseBody) SetTasks(v []ChildTaskResponseBody) {
	o.Tasks = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PkgCpeAddCpeResponseBody) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PkgCpeAddCpeResponseBody) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetVersion returns the Version field value
func (o *PkgCpeAddCpeResponseBody) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *PkgCpeAddCpeResponseBody) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *PkgCpeAddCpeResponseBody) SetVersion(v string) {
	o.Version = v
}

func (o PkgCpeAddCpeResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CpeURI != nil {
		toSerialize["cpeURI"] = o.CpeURI
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Release != nil {
		toSerialize["release"] = o.Release
	}
	if true {
		toSerialize["server"] = o.Server
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullablePkgCpeAddCpeResponseBody struct {
	value *PkgCpeAddCpeResponseBody
	isSet bool
}

func (v NullablePkgCpeAddCpeResponseBody) Get() *PkgCpeAddCpeResponseBody {
	return v.value
}

func (v *NullablePkgCpeAddCpeResponseBody) Set(val *PkgCpeAddCpeResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePkgCpeAddCpeResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePkgCpeAddCpeResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkgCpeAddCpeResponseBody(val *PkgCpeAddCpeResponseBody) *NullablePkgCpeAddCpeResponseBody {
	return &NullablePkgCpeAddCpeResponseBody{value: val, isSet: true}
}

func (v NullablePkgCpeAddCpeResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkgCpeAddCpeResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


