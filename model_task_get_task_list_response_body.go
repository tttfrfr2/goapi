/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TaskGetTaskListResponseBody struct for TaskGetTaskListResponseBody
type TaskGetTaskListResponseBody struct {
	Paging *PagingResponseBody `json:"paging,omitempty"`
	// Task list
	Tasks []TaskListResponseBody `json:"tasks,omitempty"`
}

// NewTaskGetTaskListResponseBody instantiates a new TaskGetTaskListResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskGetTaskListResponseBody() *TaskGetTaskListResponseBody {
	this := TaskGetTaskListResponseBody{}
	return &this
}

// NewTaskGetTaskListResponseBodyWithDefaults instantiates a new TaskGetTaskListResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskGetTaskListResponseBodyWithDefaults() *TaskGetTaskListResponseBody {
	this := TaskGetTaskListResponseBody{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *TaskGetTaskListResponseBody) GetPaging() PagingResponseBody {
	if o == nil || o.Paging == nil {
		var ret PagingResponseBody
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGetTaskListResponseBody) GetPagingOk() (*PagingResponseBody, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *TaskGetTaskListResponseBody) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PagingResponseBody and assigns it to the Paging field.
func (o *TaskGetTaskListResponseBody) SetPaging(v PagingResponseBody) {
	o.Paging = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *TaskGetTaskListResponseBody) GetTasks() []TaskListResponseBody {
	if o == nil || o.Tasks == nil {
		var ret []TaskListResponseBody
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGetTaskListResponseBody) GetTasksOk() ([]TaskListResponseBody, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *TaskGetTaskListResponseBody) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []TaskListResponseBody and assigns it to the Tasks field.
func (o *TaskGetTaskListResponseBody) SetTasks(v []TaskListResponseBody) {
	o.Tasks = v
}

func (o TaskGetTaskListResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	return json.Marshal(toSerialize)
}

type NullableTaskGetTaskListResponseBody struct {
	value *TaskGetTaskListResponseBody
	isSet bool
}

func (v NullableTaskGetTaskListResponseBody) Get() *TaskGetTaskListResponseBody {
	return v.value
}

func (v *NullableTaskGetTaskListResponseBody) Set(val *TaskGetTaskListResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskGetTaskListResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskGetTaskListResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskGetTaskListResponseBody(val *TaskGetTaskListResponseBody) *NullableTaskGetTaskListResponseBody {
	return &NullableTaskGetTaskListResponseBody{value: val, isSet: true}
}

func (v NullableTaskGetTaskListResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskGetTaskListResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


