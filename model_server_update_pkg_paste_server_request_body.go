/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerUpdatePkgPasteServerRequestBody struct for ServerUpdatePkgPasteServerRequestBody
type ServerUpdatePkgPasteServerRequestBody struct {
	// Kernel Release
	KernelRelease *string `json:"kernelRelease,omitempty"`
	// Kernel Version
	KernelVersion *string `json:"kernelVersion,omitempty"`
	// Server OS Version
	OsVersion *string `json:"osVersion,omitempty"`
	// pkg paste text
	PkgPasteText string `json:"pkgPasteText"`
}

// NewServerUpdatePkgPasteServerRequestBody instantiates a new ServerUpdatePkgPasteServerRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerUpdatePkgPasteServerRequestBody(pkgPasteText string) *ServerUpdatePkgPasteServerRequestBody {
	this := ServerUpdatePkgPasteServerRequestBody{}
	this.PkgPasteText = pkgPasteText
	return &this
}

// NewServerUpdatePkgPasteServerRequestBodyWithDefaults instantiates a new ServerUpdatePkgPasteServerRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerUpdatePkgPasteServerRequestBodyWithDefaults() *ServerUpdatePkgPasteServerRequestBody {
	this := ServerUpdatePkgPasteServerRequestBody{}
	return &this
}

// GetKernelRelease returns the KernelRelease field value if set, zero value otherwise.
func (o *ServerUpdatePkgPasteServerRequestBody) GetKernelRelease() string {
	if o == nil || o.KernelRelease == nil {
		var ret string
		return ret
	}
	return *o.KernelRelease
}

// GetKernelReleaseOk returns a tuple with the KernelRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) GetKernelReleaseOk() (*string, bool) {
	if o == nil || o.KernelRelease == nil {
		return nil, false
	}
	return o.KernelRelease, true
}

// HasKernelRelease returns a boolean if a field has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) HasKernelRelease() bool {
	if o != nil && o.KernelRelease != nil {
		return true
	}

	return false
}

// SetKernelRelease gets a reference to the given string and assigns it to the KernelRelease field.
func (o *ServerUpdatePkgPasteServerRequestBody) SetKernelRelease(v string) {
	o.KernelRelease = &v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *ServerUpdatePkgPasteServerRequestBody) GetKernelVersion() string {
	if o == nil || o.KernelVersion == nil {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) GetKernelVersionOk() (*string, bool) {
	if o == nil || o.KernelVersion == nil {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) HasKernelVersion() bool {
	if o != nil && o.KernelVersion != nil {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *ServerUpdatePkgPasteServerRequestBody) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *ServerUpdatePkgPasteServerRequestBody) GetOsVersion() string {
	if o == nil || o.OsVersion == nil {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) GetOsVersionOk() (*string, bool) {
	if o == nil || o.OsVersion == nil {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) HasOsVersion() bool {
	if o != nil && o.OsVersion != nil {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *ServerUpdatePkgPasteServerRequestBody) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetPkgPasteText returns the PkgPasteText field value
func (o *ServerUpdatePkgPasteServerRequestBody) GetPkgPasteText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PkgPasteText
}

// GetPkgPasteTextOk returns a tuple with the PkgPasteText field value
// and a boolean to check if the value has been set.
func (o *ServerUpdatePkgPasteServerRequestBody) GetPkgPasteTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkgPasteText, true
}

// SetPkgPasteText sets field value
func (o *ServerUpdatePkgPasteServerRequestBody) SetPkgPasteText(v string) {
	o.PkgPasteText = v
}

func (o ServerUpdatePkgPasteServerRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KernelRelease != nil {
		toSerialize["kernelRelease"] = o.KernelRelease
	}
	if o.KernelVersion != nil {
		toSerialize["kernelVersion"] = o.KernelVersion
	}
	if o.OsVersion != nil {
		toSerialize["osVersion"] = o.OsVersion
	}
	if true {
		toSerialize["pkgPasteText"] = o.PkgPasteText
	}
	return json.Marshal(toSerialize)
}

type NullableServerUpdatePkgPasteServerRequestBody struct {
	value *ServerUpdatePkgPasteServerRequestBody
	isSet bool
}

func (v NullableServerUpdatePkgPasteServerRequestBody) Get() *ServerUpdatePkgPasteServerRequestBody {
	return v.value
}

func (v *NullableServerUpdatePkgPasteServerRequestBody) Set(val *ServerUpdatePkgPasteServerRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableServerUpdatePkgPasteServerRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableServerUpdatePkgPasteServerRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerUpdatePkgPasteServerRequestBody(val *ServerUpdatePkgPasteServerRequestBody) *NullableServerUpdatePkgPasteServerRequestBody {
	return &NullableServerUpdatePkgPasteServerRequestBody{value: val, isSet: true}
}

func (v NullableServerUpdatePkgPasteServerRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerUpdatePkgPasteServerRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


