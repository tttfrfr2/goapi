/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PagingResponseBody Paging describes a paging object
type PagingResponseBody struct {
	// Limit
	Limit int64 `json:"limit"`
	// Offset
	Offset int64 `json:"offset"`
	// Page
	Page int64 `json:"page"`
	// TotalCount
	TotalCount int64 `json:"totalCount"`
	// Total Page Size
	TotalPage int64 `json:"totalPage"`
}

// NewPagingResponseBody instantiates a new PagingResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagingResponseBody(limit int64, offset int64, page int64, totalCount int64, totalPage int64) *PagingResponseBody {
	this := PagingResponseBody{}
	this.Limit = limit
	this.Offset = offset
	this.Page = page
	this.TotalCount = totalCount
	this.TotalPage = totalPage
	return &this
}

// NewPagingResponseBodyWithDefaults instantiates a new PagingResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagingResponseBodyWithDefaults() *PagingResponseBody {
	this := PagingResponseBody{}
	return &this
}

// GetLimit returns the Limit field value
func (o *PagingResponseBody) GetLimit() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *PagingResponseBody) GetLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *PagingResponseBody) SetLimit(v int64) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *PagingResponseBody) GetOffset() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *PagingResponseBody) GetOffsetOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *PagingResponseBody) SetOffset(v int64) {
	o.Offset = v
}

// GetPage returns the Page field value
func (o *PagingResponseBody) GetPage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *PagingResponseBody) GetPageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *PagingResponseBody) SetPage(v int64) {
	o.Page = v
}

// GetTotalCount returns the TotalCount field value
func (o *PagingResponseBody) GetTotalCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *PagingResponseBody) GetTotalCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *PagingResponseBody) SetTotalCount(v int64) {
	o.TotalCount = v
}

// GetTotalPage returns the TotalPage field value
func (o *PagingResponseBody) GetTotalPage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalPage
}

// GetTotalPageOk returns a tuple with the TotalPage field value
// and a boolean to check if the value has been set.
func (o *PagingResponseBody) GetTotalPageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPage, true
}

// SetTotalPage sets field value
func (o *PagingResponseBody) SetTotalPage(v int64) {
	o.TotalPage = v
}

func (o PagingResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["limit"] = o.Limit
	}
	if true {
		toSerialize["offset"] = o.Offset
	}
	if true {
		toSerialize["page"] = o.Page
	}
	if true {
		toSerialize["totalCount"] = o.TotalCount
	}
	if true {
		toSerialize["totalPage"] = o.TotalPage
	}
	return json.Marshal(toSerialize)
}

type NullablePagingResponseBody struct {
	value *PagingResponseBody
	isSet bool
}

func (v NullablePagingResponseBody) Get() *PagingResponseBody {
	return v.value
}

func (v *NullablePagingResponseBody) Set(val *PagingResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePagingResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePagingResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagingResponseBody(val *PagingResponseBody) *NullablePagingResponseBody {
	return &NullablePagingResponseBody{value: val, isSet: true}
}

func (v NullablePagingResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagingResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


