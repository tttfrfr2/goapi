/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TaskCommentResponseBody struct for TaskCommentResponseBody
type TaskCommentResponseBody struct {
	// Comment content of TaskComment
	Comment string `json:"comment"`
	// created time of TaskComment
	CreatedAt time.Time `json:"createdAt"`
	// ID of TaskComment
	Id int64 `json:"id"`
	// Type of TaskComment
	Type string `json:"type"`
	// updated time of TaskComment
	UpdatedAt time.Time `json:"updatedAt"`
	// UserID of TaskComment
	UserID int64 `json:"userID"`
	// UserName of TaskComment
	UserName string `json:"userName"`
}

// NewTaskCommentResponseBody instantiates a new TaskCommentResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskCommentResponseBody(comment string, createdAt time.Time, id int64, type_ string, updatedAt time.Time, userID int64, userName string) *TaskCommentResponseBody {
	this := TaskCommentResponseBody{}
	this.Comment = comment
	this.CreatedAt = createdAt
	this.Id = id
	this.Type = type_
	this.UpdatedAt = updatedAt
	this.UserID = userID
	this.UserName = userName
	return &this
}

// NewTaskCommentResponseBodyWithDefaults instantiates a new TaskCommentResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskCommentResponseBodyWithDefaults() *TaskCommentResponseBody {
	this := TaskCommentResponseBody{}
	return &this
}

// GetComment returns the Comment field value
func (o *TaskCommentResponseBody) GetComment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Comment
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comment, true
}

// SetComment sets field value
func (o *TaskCommentResponseBody) SetComment(v string) {
	o.Comment = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TaskCommentResponseBody) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TaskCommentResponseBody) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *TaskCommentResponseBody) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TaskCommentResponseBody) SetId(v int64) {
	o.Id = v
}

// GetType returns the Type field value
func (o *TaskCommentResponseBody) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TaskCommentResponseBody) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TaskCommentResponseBody) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TaskCommentResponseBody) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUserID returns the UserID field value
func (o *TaskCommentResponseBody) GetUserID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetUserIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserID, true
}

// SetUserID sets field value
func (o *TaskCommentResponseBody) SetUserID(v int64) {
	o.UserID = v
}

// GetUserName returns the UserName field value
func (o *TaskCommentResponseBody) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *TaskCommentResponseBody) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *TaskCommentResponseBody) SetUserName(v string) {
	o.UserName = v
}

func (o TaskCommentResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["comment"] = o.Comment
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["userID"] = o.UserID
	}
	if true {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableTaskCommentResponseBody struct {
	value *TaskCommentResponseBody
	isSet bool
}

func (v NullableTaskCommentResponseBody) Get() *TaskCommentResponseBody {
	return v.value
}

func (v *NullableTaskCommentResponseBody) Set(val *TaskCommentResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskCommentResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskCommentResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskCommentResponseBody(val *TaskCommentResponseBody) *NullableTaskCommentResponseBody {
	return &NullableTaskCommentResponseBody{value: val, isSet: true}
}

func (v NullableTaskCommentResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskCommentResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


