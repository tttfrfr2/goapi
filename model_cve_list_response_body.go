/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CveListResponseBody struct for CveListResponseBody
type CveListResponseBody struct {
	// advisoryIDs of cve
	AdvisoryIDs []string `json:"advisoryIDs,omitempty"`
	// AllTaskCount of cve
	AllTaskCount int64 `json:"allTaskCount"`
	// created time
	CreatedAt time.Time `json:"createdAt"`
	// Cve ID string of cve
	CveID string `json:"cveID"`
	// cwes of cve
	Cwes []CweResponseBody `json:"cwes"`
	// hasExploit of cve
	HasExploit *bool `json:"hasExploit,omitempty"`
	// hasMitigation of cve
	HasMitigation *bool `json:"hasMitigation,omitempty"`
	// hasWorkaroundof cve
	HasWorkaround *bool `json:"hasWorkaround,omitempty"`
	// Flag of active cve
	IsNotActive bool `json:"isNotActive"`
	// isOwaspTopTen2017 of cve
	IsOwaspTopTen2017 bool `json:"isOwaspTopTen2017"`
	// maxV2 of cve
	MaxV2 float64 `json:"maxV2"`
	// maxV3 of cve
	MaxV3 float64 `json:"maxV3"`
	// NewTaskCount of cve
	NewTaskCount int64 `json:"newTaskCount"`
	// cvss v2 scores of cve
	ScoreV2s map[string]float64 `json:"scoreV2s"`
	// cvss v3 scores of cve
	ScoreV3s map[string]float64 `json:"scoreV3s"`
	// Title of cve
	Title string `json:"title"`
	// topicCount of cve
	TopicCount int64 `json:"topicCount"`
	// topicLastUpdatedAt of cve
	TopicLastUpdatedAt time.Time `json:"topicLastUpdatedAt"`
	// updated time
	UpdatedAt time.Time `json:"updatedAt"`
	// cvss v2 vectors of cve
	VectorV2s map[string]string `json:"vectorV2s"`
	// cvss v3 vectors of cve
	VectorV3s map[string]string `json:"vectorV3s"`
}

// NewCveListResponseBody instantiates a new CveListResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCveListResponseBody(allTaskCount int64, createdAt time.Time, cveID string, cwes []CweResponseBody, isNotActive bool, isOwaspTopTen2017 bool, maxV2 float64, maxV3 float64, newTaskCount int64, scoreV2s map[string]float64, scoreV3s map[string]float64, title string, topicCount int64, topicLastUpdatedAt time.Time, updatedAt time.Time, vectorV2s map[string]string, vectorV3s map[string]string) *CveListResponseBody {
	this := CveListResponseBody{}
	this.AllTaskCount = allTaskCount
	this.CreatedAt = createdAt
	this.CveID = cveID
	this.Cwes = cwes
	this.IsNotActive = isNotActive
	this.IsOwaspTopTen2017 = isOwaspTopTen2017
	this.MaxV2 = maxV2
	this.MaxV3 = maxV3
	this.NewTaskCount = newTaskCount
	this.ScoreV2s = scoreV2s
	this.ScoreV3s = scoreV3s
	this.Title = title
	this.TopicCount = topicCount
	this.TopicLastUpdatedAt = topicLastUpdatedAt
	this.UpdatedAt = updatedAt
	this.VectorV2s = vectorV2s
	this.VectorV3s = vectorV3s
	return &this
}

// NewCveListResponseBodyWithDefaults instantiates a new CveListResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCveListResponseBodyWithDefaults() *CveListResponseBody {
	this := CveListResponseBody{}
	return &this
}

// GetAdvisoryIDs returns the AdvisoryIDs field value if set, zero value otherwise.
func (o *CveListResponseBody) GetAdvisoryIDs() []string {
	if o == nil || o.AdvisoryIDs == nil {
		var ret []string
		return ret
	}
	return o.AdvisoryIDs
}

// GetAdvisoryIDsOk returns a tuple with the AdvisoryIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetAdvisoryIDsOk() ([]string, bool) {
	if o == nil || o.AdvisoryIDs == nil {
		return nil, false
	}
	return o.AdvisoryIDs, true
}

// HasAdvisoryIDs returns a boolean if a field has been set.
func (o *CveListResponseBody) HasAdvisoryIDs() bool {
	if o != nil && o.AdvisoryIDs != nil {
		return true
	}

	return false
}

// SetAdvisoryIDs gets a reference to the given []string and assigns it to the AdvisoryIDs field.
func (o *CveListResponseBody) SetAdvisoryIDs(v []string) {
	o.AdvisoryIDs = v
}

// GetAllTaskCount returns the AllTaskCount field value
func (o *CveListResponseBody) GetAllTaskCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AllTaskCount
}

// GetAllTaskCountOk returns a tuple with the AllTaskCount field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetAllTaskCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllTaskCount, true
}

// SetAllTaskCount sets field value
func (o *CveListResponseBody) SetAllTaskCount(v int64) {
	o.AllTaskCount = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CveListResponseBody) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CveListResponseBody) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCveID returns the CveID field value
func (o *CveListResponseBody) GetCveID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveID
}

// GetCveIDOk returns a tuple with the CveID field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetCveIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveID, true
}

// SetCveID sets field value
func (o *CveListResponseBody) SetCveID(v string) {
	o.CveID = v
}

// GetCwes returns the Cwes field value
func (o *CveListResponseBody) GetCwes() []CweResponseBody {
	if o == nil {
		var ret []CweResponseBody
		return ret
	}

	return o.Cwes
}

// GetCwesOk returns a tuple with the Cwes field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetCwesOk() ([]CweResponseBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cwes, true
}

// SetCwes sets field value
func (o *CveListResponseBody) SetCwes(v []CweResponseBody) {
	o.Cwes = v
}

// GetHasExploit returns the HasExploit field value if set, zero value otherwise.
func (o *CveListResponseBody) GetHasExploit() bool {
	if o == nil || o.HasExploit == nil {
		var ret bool
		return ret
	}
	return *o.HasExploit
}

// GetHasExploitOk returns a tuple with the HasExploit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetHasExploitOk() (*bool, bool) {
	if o == nil || o.HasExploit == nil {
		return nil, false
	}
	return o.HasExploit, true
}

// HasHasExploit returns a boolean if a field has been set.
func (o *CveListResponseBody) HasHasExploit() bool {
	if o != nil && o.HasExploit != nil {
		return true
	}

	return false
}

// SetHasExploit gets a reference to the given bool and assigns it to the HasExploit field.
func (o *CveListResponseBody) SetHasExploit(v bool) {
	o.HasExploit = &v
}

// GetHasMitigation returns the HasMitigation field value if set, zero value otherwise.
func (o *CveListResponseBody) GetHasMitigation() bool {
	if o == nil || o.HasMitigation == nil {
		var ret bool
		return ret
	}
	return *o.HasMitigation
}

// GetHasMitigationOk returns a tuple with the HasMitigation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetHasMitigationOk() (*bool, bool) {
	if o == nil || o.HasMitigation == nil {
		return nil, false
	}
	return o.HasMitigation, true
}

// HasHasMitigation returns a boolean if a field has been set.
func (o *CveListResponseBody) HasHasMitigation() bool {
	if o != nil && o.HasMitigation != nil {
		return true
	}

	return false
}

// SetHasMitigation gets a reference to the given bool and assigns it to the HasMitigation field.
func (o *CveListResponseBody) SetHasMitigation(v bool) {
	o.HasMitigation = &v
}

// GetHasWorkaround returns the HasWorkaround field value if set, zero value otherwise.
func (o *CveListResponseBody) GetHasWorkaround() bool {
	if o == nil || o.HasWorkaround == nil {
		var ret bool
		return ret
	}
	return *o.HasWorkaround
}

// GetHasWorkaroundOk returns a tuple with the HasWorkaround field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetHasWorkaroundOk() (*bool, bool) {
	if o == nil || o.HasWorkaround == nil {
		return nil, false
	}
	return o.HasWorkaround, true
}

// HasHasWorkaround returns a boolean if a field has been set.
func (o *CveListResponseBody) HasHasWorkaround() bool {
	if o != nil && o.HasWorkaround != nil {
		return true
	}

	return false
}

// SetHasWorkaround gets a reference to the given bool and assigns it to the HasWorkaround field.
func (o *CveListResponseBody) SetHasWorkaround(v bool) {
	o.HasWorkaround = &v
}

// GetIsNotActive returns the IsNotActive field value
func (o *CveListResponseBody) GetIsNotActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsNotActive
}

// GetIsNotActiveOk returns a tuple with the IsNotActive field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetIsNotActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsNotActive, true
}

// SetIsNotActive sets field value
func (o *CveListResponseBody) SetIsNotActive(v bool) {
	o.IsNotActive = v
}

// GetIsOwaspTopTen2017 returns the IsOwaspTopTen2017 field value
func (o *CveListResponseBody) GetIsOwaspTopTen2017() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOwaspTopTen2017
}

// GetIsOwaspTopTen2017Ok returns a tuple with the IsOwaspTopTen2017 field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetIsOwaspTopTen2017Ok() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOwaspTopTen2017, true
}

// SetIsOwaspTopTen2017 sets field value
func (o *CveListResponseBody) SetIsOwaspTopTen2017(v bool) {
	o.IsOwaspTopTen2017 = v
}

// GetMaxV2 returns the MaxV2 field value
func (o *CveListResponseBody) GetMaxV2() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MaxV2
}

// GetMaxV2Ok returns a tuple with the MaxV2 field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetMaxV2Ok() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxV2, true
}

// SetMaxV2 sets field value
func (o *CveListResponseBody) SetMaxV2(v float64) {
	o.MaxV2 = v
}

// GetMaxV3 returns the MaxV3 field value
func (o *CveListResponseBody) GetMaxV3() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MaxV3
}

// GetMaxV3Ok returns a tuple with the MaxV3 field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetMaxV3Ok() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxV3, true
}

// SetMaxV3 sets field value
func (o *CveListResponseBody) SetMaxV3(v float64) {
	o.MaxV3 = v
}

// GetNewTaskCount returns the NewTaskCount field value
func (o *CveListResponseBody) GetNewTaskCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NewTaskCount
}

// GetNewTaskCountOk returns a tuple with the NewTaskCount field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetNewTaskCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewTaskCount, true
}

// SetNewTaskCount sets field value
func (o *CveListResponseBody) SetNewTaskCount(v int64) {
	o.NewTaskCount = v
}

// GetScoreV2s returns the ScoreV2s field value
func (o *CveListResponseBody) GetScoreV2s() map[string]float64 {
	if o == nil {
		var ret map[string]float64
		return ret
	}

	return o.ScoreV2s
}

// GetScoreV2sOk returns a tuple with the ScoreV2s field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetScoreV2sOk() (*map[string]float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoreV2s, true
}

// SetScoreV2s sets field value
func (o *CveListResponseBody) SetScoreV2s(v map[string]float64) {
	o.ScoreV2s = v
}

// GetScoreV3s returns the ScoreV3s field value
func (o *CveListResponseBody) GetScoreV3s() map[string]float64 {
	if o == nil {
		var ret map[string]float64
		return ret
	}

	return o.ScoreV3s
}

// GetScoreV3sOk returns a tuple with the ScoreV3s field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetScoreV3sOk() (*map[string]float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScoreV3s, true
}

// SetScoreV3s sets field value
func (o *CveListResponseBody) SetScoreV3s(v map[string]float64) {
	o.ScoreV3s = v
}

// GetTitle returns the Title field value
func (o *CveListResponseBody) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CveListResponseBody) SetTitle(v string) {
	o.Title = v
}

// GetTopicCount returns the TopicCount field value
func (o *CveListResponseBody) GetTopicCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TopicCount
}

// GetTopicCountOk returns a tuple with the TopicCount field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetTopicCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopicCount, true
}

// SetTopicCount sets field value
func (o *CveListResponseBody) SetTopicCount(v int64) {
	o.TopicCount = v
}

// GetTopicLastUpdatedAt returns the TopicLastUpdatedAt field value
func (o *CveListResponseBody) GetTopicLastUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TopicLastUpdatedAt
}

// GetTopicLastUpdatedAtOk returns a tuple with the TopicLastUpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetTopicLastUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopicLastUpdatedAt, true
}

// SetTopicLastUpdatedAt sets field value
func (o *CveListResponseBody) SetTopicLastUpdatedAt(v time.Time) {
	o.TopicLastUpdatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CveListResponseBody) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CveListResponseBody) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetVectorV2s returns the VectorV2s field value
func (o *CveListResponseBody) GetVectorV2s() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.VectorV2s
}

// GetVectorV2sOk returns a tuple with the VectorV2s field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetVectorV2sOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VectorV2s, true
}

// SetVectorV2s sets field value
func (o *CveListResponseBody) SetVectorV2s(v map[string]string) {
	o.VectorV2s = v
}

// GetVectorV3s returns the VectorV3s field value
func (o *CveListResponseBody) GetVectorV3s() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.VectorV3s
}

// GetVectorV3sOk returns a tuple with the VectorV3s field value
// and a boolean to check if the value has been set.
func (o *CveListResponseBody) GetVectorV3sOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VectorV3s, true
}

// SetVectorV3s sets field value
func (o *CveListResponseBody) SetVectorV3s(v map[string]string) {
	o.VectorV3s = v
}

func (o CveListResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdvisoryIDs != nil {
		toSerialize["advisoryIDs"] = o.AdvisoryIDs
	}
	if true {
		toSerialize["allTaskCount"] = o.AllTaskCount
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["cveID"] = o.CveID
	}
	if true {
		toSerialize["cwes"] = o.Cwes
	}
	if o.HasExploit != nil {
		toSerialize["hasExploit"] = o.HasExploit
	}
	if o.HasMitigation != nil {
		toSerialize["hasMitigation"] = o.HasMitigation
	}
	if o.HasWorkaround != nil {
		toSerialize["hasWorkaround"] = o.HasWorkaround
	}
	if true {
		toSerialize["isNotActive"] = o.IsNotActive
	}
	if true {
		toSerialize["isOwaspTopTen2017"] = o.IsOwaspTopTen2017
	}
	if true {
		toSerialize["maxV2"] = o.MaxV2
	}
	if true {
		toSerialize["maxV3"] = o.MaxV3
	}
	if true {
		toSerialize["newTaskCount"] = o.NewTaskCount
	}
	if true {
		toSerialize["scoreV2s"] = o.ScoreV2s
	}
	if true {
		toSerialize["scoreV3s"] = o.ScoreV3s
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["topicCount"] = o.TopicCount
	}
	if true {
		toSerialize["topicLastUpdatedAt"] = o.TopicLastUpdatedAt
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["vectorV2s"] = o.VectorV2s
	}
	if true {
		toSerialize["vectorV3s"] = o.VectorV3s
	}
	return json.Marshal(toSerialize)
}

type NullableCveListResponseBody struct {
	value *CveListResponseBody
	isSet bool
}

func (v NullableCveListResponseBody) Get() *CveListResponseBody {
	return v.value
}

func (v *NullableCveListResponseBody) Set(val *CveListResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCveListResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCveListResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCveListResponseBody(val *CveListResponseBody) *NullableCveListResponseBody {
	return &NullableCveListResponseBody{value: val, isSet: true}
}

func (v NullableCveListResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCveListResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


