/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TaskListResponseBody struct for TaskListResponseBody
type TaskListResponseBody struct {
	// advisoryIDs of cve
	AdvisoryIDs []string `json:"advisoryIDs,omitempty"`
	// ApplyingPatchOn of task
	ApplyingPatchOn *string `json:"applyingPatchOn,omitempty"`
	// created time of task
	CreatedAt time.Time `json:"createdAt"`
	// CVE ID of task
	CveID string `json:"cveID"`
	// DetectionTools of task
	DetectionTools []DetectionToolResponseBody `json:"detectionTools,omitempty"`
	// hasExploit of cve
	HasExploit *bool `json:"hasExploit,omitempty"`
	// hasMitigation of cve
	HasMitigation *bool `json:"hasMitigation,omitempty"`
	// hasWorkaroundof cve
	HasWorkaround *bool `json:"hasWorkaround,omitempty"`
	// ID of task
	Id int64 `json:"id"`
	// Ignore of task
	Ignore bool `json:"ignore"`
	// Ignore until of task
	IgnoreUntil *string `json:"ignoreUntil,omitempty"`
	// MainUserID of task
	MainUserID *int64 `json:"mainUserID,omitempty"`
	// MainUserName of task
	MainUserName *string `json:"mainUserName,omitempty"`
	// OS Name of server
	OsFamily string `json:"osFamily"`
	// OS Version of server
	OsVersion string `json:"osVersion"`
	// Package And CPE Names of task
	PkgCpeNames []string `json:"pkgCpeNames,omitempty"`
	// Flag of Not Fixed Yet of task
	PkgNotFixedYet *bool `json:"pkgNotFixedYet,omitempty"`
	// Priority of task
	Priority string `json:"priority"`
	// ServerRoleID of task
	RoleID int64 `json:"roleID"`
	// ServerRoleName of task
	RoleName string `json:"roleName"`
	// ServerID of task
	ServerID int64 `json:"serverID"`
	// ServerName of task
	ServerName string `json:"serverName"`
	// ServerTags of task
	ServerTags []string `json:"serverTags,omitempty"`
	// ServerUUID of task
	ServerUuid string `json:"serverUuid"`
	// Status of task
	Status string `json:"status"`
	// SubUserID of task
	SubUserID *int64 `json:"subUserID,omitempty"`
	// SubUserName of task
	SubUserName *string `json:"subUserName,omitempty"`
	// updated time of task
	UpdatedAt time.Time `json:"updatedAt"`
}

// NewTaskListResponseBody instantiates a new TaskListResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskListResponseBody(createdAt time.Time, cveID string, id int64, ignore bool, osFamily string, osVersion string, priority string, roleID int64, roleName string, serverID int64, serverName string, serverUuid string, status string, updatedAt time.Time) *TaskListResponseBody {
	this := TaskListResponseBody{}
	this.CreatedAt = createdAt
	this.CveID = cveID
	this.Id = id
	this.Ignore = ignore
	this.OsFamily = osFamily
	this.OsVersion = osVersion
	this.Priority = priority
	this.RoleID = roleID
	this.RoleName = roleName
	this.ServerID = serverID
	this.ServerName = serverName
	this.ServerUuid = serverUuid
	this.Status = status
	this.UpdatedAt = updatedAt
	return &this
}

// NewTaskListResponseBodyWithDefaults instantiates a new TaskListResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskListResponseBodyWithDefaults() *TaskListResponseBody {
	this := TaskListResponseBody{}
	return &this
}

// GetAdvisoryIDs returns the AdvisoryIDs field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetAdvisoryIDs() []string {
	if o == nil || o.AdvisoryIDs == nil {
		var ret []string
		return ret
	}
	return o.AdvisoryIDs
}

// GetAdvisoryIDsOk returns a tuple with the AdvisoryIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetAdvisoryIDsOk() ([]string, bool) {
	if o == nil || o.AdvisoryIDs == nil {
		return nil, false
	}
	return o.AdvisoryIDs, true
}

// HasAdvisoryIDs returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasAdvisoryIDs() bool {
	if o != nil && o.AdvisoryIDs != nil {
		return true
	}

	return false
}

// SetAdvisoryIDs gets a reference to the given []string and assigns it to the AdvisoryIDs field.
func (o *TaskListResponseBody) SetAdvisoryIDs(v []string) {
	o.AdvisoryIDs = v
}

// GetApplyingPatchOn returns the ApplyingPatchOn field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetApplyingPatchOn() string {
	if o == nil || o.ApplyingPatchOn == nil {
		var ret string
		return ret
	}
	return *o.ApplyingPatchOn
}

// GetApplyingPatchOnOk returns a tuple with the ApplyingPatchOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetApplyingPatchOnOk() (*string, bool) {
	if o == nil || o.ApplyingPatchOn == nil {
		return nil, false
	}
	return o.ApplyingPatchOn, true
}

// HasApplyingPatchOn returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasApplyingPatchOn() bool {
	if o != nil && o.ApplyingPatchOn != nil {
		return true
	}

	return false
}

// SetApplyingPatchOn gets a reference to the given string and assigns it to the ApplyingPatchOn field.
func (o *TaskListResponseBody) SetApplyingPatchOn(v string) {
	o.ApplyingPatchOn = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TaskListResponseBody) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TaskListResponseBody) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCveID returns the CveID field value
func (o *TaskListResponseBody) GetCveID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveID
}

// GetCveIDOk returns a tuple with the CveID field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetCveIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveID, true
}

// SetCveID sets field value
func (o *TaskListResponseBody) SetCveID(v string) {
	o.CveID = v
}

// GetDetectionTools returns the DetectionTools field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetDetectionTools() []DetectionToolResponseBody {
	if o == nil || o.DetectionTools == nil {
		var ret []DetectionToolResponseBody
		return ret
	}
	return o.DetectionTools
}

// GetDetectionToolsOk returns a tuple with the DetectionTools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetDetectionToolsOk() ([]DetectionToolResponseBody, bool) {
	if o == nil || o.DetectionTools == nil {
		return nil, false
	}
	return o.DetectionTools, true
}

// HasDetectionTools returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasDetectionTools() bool {
	if o != nil && o.DetectionTools != nil {
		return true
	}

	return false
}

// SetDetectionTools gets a reference to the given []DetectionToolResponseBody and assigns it to the DetectionTools field.
func (o *TaskListResponseBody) SetDetectionTools(v []DetectionToolResponseBody) {
	o.DetectionTools = v
}

// GetHasExploit returns the HasExploit field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetHasExploit() bool {
	if o == nil || o.HasExploit == nil {
		var ret bool
		return ret
	}
	return *o.HasExploit
}

// GetHasExploitOk returns a tuple with the HasExploit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetHasExploitOk() (*bool, bool) {
	if o == nil || o.HasExploit == nil {
		return nil, false
	}
	return o.HasExploit, true
}

// HasHasExploit returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasHasExploit() bool {
	if o != nil && o.HasExploit != nil {
		return true
	}

	return false
}

// SetHasExploit gets a reference to the given bool and assigns it to the HasExploit field.
func (o *TaskListResponseBody) SetHasExploit(v bool) {
	o.HasExploit = &v
}

// GetHasMitigation returns the HasMitigation field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetHasMitigation() bool {
	if o == nil || o.HasMitigation == nil {
		var ret bool
		return ret
	}
	return *o.HasMitigation
}

// GetHasMitigationOk returns a tuple with the HasMitigation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetHasMitigationOk() (*bool, bool) {
	if o == nil || o.HasMitigation == nil {
		return nil, false
	}
	return o.HasMitigation, true
}

// HasHasMitigation returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasHasMitigation() bool {
	if o != nil && o.HasMitigation != nil {
		return true
	}

	return false
}

// SetHasMitigation gets a reference to the given bool and assigns it to the HasMitigation field.
func (o *TaskListResponseBody) SetHasMitigation(v bool) {
	o.HasMitigation = &v
}

// GetHasWorkaround returns the HasWorkaround field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetHasWorkaround() bool {
	if o == nil || o.HasWorkaround == nil {
		var ret bool
		return ret
	}
	return *o.HasWorkaround
}

// GetHasWorkaroundOk returns a tuple with the HasWorkaround field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetHasWorkaroundOk() (*bool, bool) {
	if o == nil || o.HasWorkaround == nil {
		return nil, false
	}
	return o.HasWorkaround, true
}

// HasHasWorkaround returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasHasWorkaround() bool {
	if o != nil && o.HasWorkaround != nil {
		return true
	}

	return false
}

// SetHasWorkaround gets a reference to the given bool and assigns it to the HasWorkaround field.
func (o *TaskListResponseBody) SetHasWorkaround(v bool) {
	o.HasWorkaround = &v
}

// GetId returns the Id field value
func (o *TaskListResponseBody) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TaskListResponseBody) SetId(v int64) {
	o.Id = v
}

// GetIgnore returns the Ignore field value
func (o *TaskListResponseBody) GetIgnore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ignore
}

// GetIgnoreOk returns a tuple with the Ignore field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetIgnoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ignore, true
}

// SetIgnore sets field value
func (o *TaskListResponseBody) SetIgnore(v bool) {
	o.Ignore = v
}

// GetIgnoreUntil returns the IgnoreUntil field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetIgnoreUntil() string {
	if o == nil || o.IgnoreUntil == nil {
		var ret string
		return ret
	}
	return *o.IgnoreUntil
}

// GetIgnoreUntilOk returns a tuple with the IgnoreUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetIgnoreUntilOk() (*string, bool) {
	if o == nil || o.IgnoreUntil == nil {
		return nil, false
	}
	return o.IgnoreUntil, true
}

// HasIgnoreUntil returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasIgnoreUntil() bool {
	if o != nil && o.IgnoreUntil != nil {
		return true
	}

	return false
}

// SetIgnoreUntil gets a reference to the given string and assigns it to the IgnoreUntil field.
func (o *TaskListResponseBody) SetIgnoreUntil(v string) {
	o.IgnoreUntil = &v
}

// GetMainUserID returns the MainUserID field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetMainUserID() int64 {
	if o == nil || o.MainUserID == nil {
		var ret int64
		return ret
	}
	return *o.MainUserID
}

// GetMainUserIDOk returns a tuple with the MainUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetMainUserIDOk() (*int64, bool) {
	if o == nil || o.MainUserID == nil {
		return nil, false
	}
	return o.MainUserID, true
}

// HasMainUserID returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasMainUserID() bool {
	if o != nil && o.MainUserID != nil {
		return true
	}

	return false
}

// SetMainUserID gets a reference to the given int64 and assigns it to the MainUserID field.
func (o *TaskListResponseBody) SetMainUserID(v int64) {
	o.MainUserID = &v
}

// GetMainUserName returns the MainUserName field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetMainUserName() string {
	if o == nil || o.MainUserName == nil {
		var ret string
		return ret
	}
	return *o.MainUserName
}

// GetMainUserNameOk returns a tuple with the MainUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetMainUserNameOk() (*string, bool) {
	if o == nil || o.MainUserName == nil {
		return nil, false
	}
	return o.MainUserName, true
}

// HasMainUserName returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasMainUserName() bool {
	if o != nil && o.MainUserName != nil {
		return true
	}

	return false
}

// SetMainUserName gets a reference to the given string and assigns it to the MainUserName field.
func (o *TaskListResponseBody) SetMainUserName(v string) {
	o.MainUserName = &v
}

// GetOsFamily returns the OsFamily field value
func (o *TaskListResponseBody) GetOsFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetOsFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsFamily, true
}

// SetOsFamily sets field value
func (o *TaskListResponseBody) SetOsFamily(v string) {
	o.OsFamily = v
}

// GetOsVersion returns the OsVersion field value
func (o *TaskListResponseBody) GetOsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsVersion, true
}

// SetOsVersion sets field value
func (o *TaskListResponseBody) SetOsVersion(v string) {
	o.OsVersion = v
}

// GetPkgCpeNames returns the PkgCpeNames field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetPkgCpeNames() []string {
	if o == nil || o.PkgCpeNames == nil {
		var ret []string
		return ret
	}
	return o.PkgCpeNames
}

// GetPkgCpeNamesOk returns a tuple with the PkgCpeNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetPkgCpeNamesOk() ([]string, bool) {
	if o == nil || o.PkgCpeNames == nil {
		return nil, false
	}
	return o.PkgCpeNames, true
}

// HasPkgCpeNames returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasPkgCpeNames() bool {
	if o != nil && o.PkgCpeNames != nil {
		return true
	}

	return false
}

// SetPkgCpeNames gets a reference to the given []string and assigns it to the PkgCpeNames field.
func (o *TaskListResponseBody) SetPkgCpeNames(v []string) {
	o.PkgCpeNames = v
}

// GetPkgNotFixedYet returns the PkgNotFixedYet field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetPkgNotFixedYet() bool {
	if o == nil || o.PkgNotFixedYet == nil {
		var ret bool
		return ret
	}
	return *o.PkgNotFixedYet
}

// GetPkgNotFixedYetOk returns a tuple with the PkgNotFixedYet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetPkgNotFixedYetOk() (*bool, bool) {
	if o == nil || o.PkgNotFixedYet == nil {
		return nil, false
	}
	return o.PkgNotFixedYet, true
}

// HasPkgNotFixedYet returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasPkgNotFixedYet() bool {
	if o != nil && o.PkgNotFixedYet != nil {
		return true
	}

	return false
}

// SetPkgNotFixedYet gets a reference to the given bool and assigns it to the PkgNotFixedYet field.
func (o *TaskListResponseBody) SetPkgNotFixedYet(v bool) {
	o.PkgNotFixedYet = &v
}

// GetPriority returns the Priority field value
func (o *TaskListResponseBody) GetPriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *TaskListResponseBody) SetPriority(v string) {
	o.Priority = v
}

// GetRoleID returns the RoleID field value
func (o *TaskListResponseBody) GetRoleID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RoleID
}

// GetRoleIDOk returns a tuple with the RoleID field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetRoleIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleID, true
}

// SetRoleID sets field value
func (o *TaskListResponseBody) SetRoleID(v int64) {
	o.RoleID = v
}

// GetRoleName returns the RoleName field value
func (o *TaskListResponseBody) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *TaskListResponseBody) SetRoleName(v string) {
	o.RoleName = v
}

// GetServerID returns the ServerID field value
func (o *TaskListResponseBody) GetServerID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServerID
}

// GetServerIDOk returns a tuple with the ServerID field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetServerIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerID, true
}

// SetServerID sets field value
func (o *TaskListResponseBody) SetServerID(v int64) {
	o.ServerID = v
}

// GetServerName returns the ServerName field value
func (o *TaskListResponseBody) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *TaskListResponseBody) SetServerName(v string) {
	o.ServerName = v
}

// GetServerTags returns the ServerTags field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetServerTags() []string {
	if o == nil || o.ServerTags == nil {
		var ret []string
		return ret
	}
	return o.ServerTags
}

// GetServerTagsOk returns a tuple with the ServerTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetServerTagsOk() ([]string, bool) {
	if o == nil || o.ServerTags == nil {
		return nil, false
	}
	return o.ServerTags, true
}

// HasServerTags returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasServerTags() bool {
	if o != nil && o.ServerTags != nil {
		return true
	}

	return false
}

// SetServerTags gets a reference to the given []string and assigns it to the ServerTags field.
func (o *TaskListResponseBody) SetServerTags(v []string) {
	o.ServerTags = v
}

// GetServerUuid returns the ServerUuid field value
func (o *TaskListResponseBody) GetServerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUuid
}

// GetServerUuidOk returns a tuple with the ServerUuid field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetServerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUuid, true
}

// SetServerUuid sets field value
func (o *TaskListResponseBody) SetServerUuid(v string) {
	o.ServerUuid = v
}

// GetStatus returns the Status field value
func (o *TaskListResponseBody) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TaskListResponseBody) SetStatus(v string) {
	o.Status = v
}

// GetSubUserID returns the SubUserID field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetSubUserID() int64 {
	if o == nil || o.SubUserID == nil {
		var ret int64
		return ret
	}
	return *o.SubUserID
}

// GetSubUserIDOk returns a tuple with the SubUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetSubUserIDOk() (*int64, bool) {
	if o == nil || o.SubUserID == nil {
		return nil, false
	}
	return o.SubUserID, true
}

// HasSubUserID returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasSubUserID() bool {
	if o != nil && o.SubUserID != nil {
		return true
	}

	return false
}

// SetSubUserID gets a reference to the given int64 and assigns it to the SubUserID field.
func (o *TaskListResponseBody) SetSubUserID(v int64) {
	o.SubUserID = &v
}

// GetSubUserName returns the SubUserName field value if set, zero value otherwise.
func (o *TaskListResponseBody) GetSubUserName() string {
	if o == nil || o.SubUserName == nil {
		var ret string
		return ret
	}
	return *o.SubUserName
}

// GetSubUserNameOk returns a tuple with the SubUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetSubUserNameOk() (*string, bool) {
	if o == nil || o.SubUserName == nil {
		return nil, false
	}
	return o.SubUserName, true
}

// HasSubUserName returns a boolean if a field has been set.
func (o *TaskListResponseBody) HasSubUserName() bool {
	if o != nil && o.SubUserName != nil {
		return true
	}

	return false
}

// SetSubUserName gets a reference to the given string and assigns it to the SubUserName field.
func (o *TaskListResponseBody) SetSubUserName(v string) {
	o.SubUserName = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TaskListResponseBody) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TaskListResponseBody) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TaskListResponseBody) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o TaskListResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdvisoryIDs != nil {
		toSerialize["advisoryIDs"] = o.AdvisoryIDs
	}
	if o.ApplyingPatchOn != nil {
		toSerialize["applyingPatchOn"] = o.ApplyingPatchOn
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["cveID"] = o.CveID
	}
	if o.DetectionTools != nil {
		toSerialize["detectionTools"] = o.DetectionTools
	}
	if o.HasExploit != nil {
		toSerialize["hasExploit"] = o.HasExploit
	}
	if o.HasMitigation != nil {
		toSerialize["hasMitigation"] = o.HasMitigation
	}
	if o.HasWorkaround != nil {
		toSerialize["hasWorkaround"] = o.HasWorkaround
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["ignore"] = o.Ignore
	}
	if o.IgnoreUntil != nil {
		toSerialize["ignoreUntil"] = o.IgnoreUntil
	}
	if o.MainUserID != nil {
		toSerialize["mainUserID"] = o.MainUserID
	}
	if o.MainUserName != nil {
		toSerialize["mainUserName"] = o.MainUserName
	}
	if true {
		toSerialize["osFamily"] = o.OsFamily
	}
	if true {
		toSerialize["osVersion"] = o.OsVersion
	}
	if o.PkgCpeNames != nil {
		toSerialize["pkgCpeNames"] = o.PkgCpeNames
	}
	if o.PkgNotFixedYet != nil {
		toSerialize["pkgNotFixedYet"] = o.PkgNotFixedYet
	}
	if true {
		toSerialize["priority"] = o.Priority
	}
	if true {
		toSerialize["roleID"] = o.RoleID
	}
	if true {
		toSerialize["roleName"] = o.RoleName
	}
	if true {
		toSerialize["serverID"] = o.ServerID
	}
	if true {
		toSerialize["serverName"] = o.ServerName
	}
	if o.ServerTags != nil {
		toSerialize["serverTags"] = o.ServerTags
	}
	if true {
		toSerialize["serverUuid"] = o.ServerUuid
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.SubUserID != nil {
		toSerialize["subUserID"] = o.SubUserID
	}
	if o.SubUserName != nil {
		toSerialize["subUserName"] = o.SubUserName
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableTaskListResponseBody struct {
	value *TaskListResponseBody
	isSet bool
}

func (v NullableTaskListResponseBody) Get() *TaskListResponseBody {
	return v.value
}

func (v *NullableTaskListResponseBody) Set(val *TaskListResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskListResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskListResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskListResponseBody(val *TaskListResponseBody) *NullableTaskListResponseBody {
	return &NullableTaskListResponseBody{value: val, isSet: true}
}

func (v NullableTaskListResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskListResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


