/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerCreatePkgPasteServerRequestBody struct for ServerCreatePkgPasteServerRequestBody
type ServerCreatePkgPasteServerRequestBody struct {
	// Kernel Release
	KernelRelease string `json:"kernelRelease"`
	// Kernel Version
	KernelVersion *string `json:"kernelVersion,omitempty"`
	// Server OS Family
	OsFamily string `json:"osFamily"`
	// Server OS Version
	OsVersion string `json:"osVersion"`
	// pkg paste text
	PkgPasteText string `json:"pkgPasteText"`
	// Server Name
	ServerName string `json:"serverName"`
}

// NewServerCreatePkgPasteServerRequestBody instantiates a new ServerCreatePkgPasteServerRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerCreatePkgPasteServerRequestBody(kernelRelease string, osFamily string, osVersion string, pkgPasteText string, serverName string) *ServerCreatePkgPasteServerRequestBody {
	this := ServerCreatePkgPasteServerRequestBody{}
	this.KernelRelease = kernelRelease
	this.OsFamily = osFamily
	this.OsVersion = osVersion
	this.PkgPasteText = pkgPasteText
	this.ServerName = serverName
	return &this
}

// NewServerCreatePkgPasteServerRequestBodyWithDefaults instantiates a new ServerCreatePkgPasteServerRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerCreatePkgPasteServerRequestBodyWithDefaults() *ServerCreatePkgPasteServerRequestBody {
	this := ServerCreatePkgPasteServerRequestBody{}
	return &this
}

// GetKernelRelease returns the KernelRelease field value
func (o *ServerCreatePkgPasteServerRequestBody) GetKernelRelease() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KernelRelease
}

// GetKernelReleaseOk returns a tuple with the KernelRelease field value
// and a boolean to check if the value has been set.
func (o *ServerCreatePkgPasteServerRequestBody) GetKernelReleaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KernelRelease, true
}

// SetKernelRelease sets field value
func (o *ServerCreatePkgPasteServerRequestBody) SetKernelRelease(v string) {
	o.KernelRelease = v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *ServerCreatePkgPasteServerRequestBody) GetKernelVersion() string {
	if o == nil || o.KernelVersion == nil {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCreatePkgPasteServerRequestBody) GetKernelVersionOk() (*string, bool) {
	if o == nil || o.KernelVersion == nil {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *ServerCreatePkgPasteServerRequestBody) HasKernelVersion() bool {
	if o != nil && o.KernelVersion != nil {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *ServerCreatePkgPasteServerRequestBody) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetOsFamily returns the OsFamily field value
func (o *ServerCreatePkgPasteServerRequestBody) GetOsFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value
// and a boolean to check if the value has been set.
func (o *ServerCreatePkgPasteServerRequestBody) GetOsFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsFamily, true
}

// SetOsFamily sets field value
func (o *ServerCreatePkgPasteServerRequestBody) SetOsFamily(v string) {
	o.OsFamily = v
}

// GetOsVersion returns the OsVersion field value
func (o *ServerCreatePkgPasteServerRequestBody) GetOsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value
// and a boolean to check if the value has been set.
func (o *ServerCreatePkgPasteServerRequestBody) GetOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsVersion, true
}

// SetOsVersion sets field value
func (o *ServerCreatePkgPasteServerRequestBody) SetOsVersion(v string) {
	o.OsVersion = v
}

// GetPkgPasteText returns the PkgPasteText field value
func (o *ServerCreatePkgPasteServerRequestBody) GetPkgPasteText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PkgPasteText
}

// GetPkgPasteTextOk returns a tuple with the PkgPasteText field value
// and a boolean to check if the value has been set.
func (o *ServerCreatePkgPasteServerRequestBody) GetPkgPasteTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PkgPasteText, true
}

// SetPkgPasteText sets field value
func (o *ServerCreatePkgPasteServerRequestBody) SetPkgPasteText(v string) {
	o.PkgPasteText = v
}

// GetServerName returns the ServerName field value
func (o *ServerCreatePkgPasteServerRequestBody) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *ServerCreatePkgPasteServerRequestBody) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *ServerCreatePkgPasteServerRequestBody) SetServerName(v string) {
	o.ServerName = v
}

func (o ServerCreatePkgPasteServerRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kernelRelease"] = o.KernelRelease
	}
	if o.KernelVersion != nil {
		toSerialize["kernelVersion"] = o.KernelVersion
	}
	if true {
		toSerialize["osFamily"] = o.OsFamily
	}
	if true {
		toSerialize["osVersion"] = o.OsVersion
	}
	if true {
		toSerialize["pkgPasteText"] = o.PkgPasteText
	}
	if true {
		toSerialize["serverName"] = o.ServerName
	}
	return json.Marshal(toSerialize)
}

type NullableServerCreatePkgPasteServerRequestBody struct {
	value *ServerCreatePkgPasteServerRequestBody
	isSet bool
}

func (v NullableServerCreatePkgPasteServerRequestBody) Get() *ServerCreatePkgPasteServerRequestBody {
	return v.value
}

func (v *NullableServerCreatePkgPasteServerRequestBody) Set(val *ServerCreatePkgPasteServerRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableServerCreatePkgPasteServerRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableServerCreatePkgPasteServerRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerCreatePkgPasteServerRequestBody(val *ServerCreatePkgPasteServerRequestBody) *NullableServerCreatePkgPasteServerRequestBody {
	return &NullableServerCreatePkgPasteServerRequestBody{value: val, isSet: true}
}

func (v NullableServerCreatePkgPasteServerRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerCreatePkgPasteServerRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


