/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AdvisoryResponseBody Advisory describes a advisory
type AdvisoryResponseBody struct {
	// AdvisoryID of advisory
	AdvisoryID string `json:"advisoryID"`
	// osFamily of advisory
	OsFamily string `json:"osFamily"`
}

// NewAdvisoryResponseBody instantiates a new AdvisoryResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryResponseBody(advisoryID string, osFamily string) *AdvisoryResponseBody {
	this := AdvisoryResponseBody{}
	this.AdvisoryID = advisoryID
	this.OsFamily = osFamily
	return &this
}

// NewAdvisoryResponseBodyWithDefaults instantiates a new AdvisoryResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryResponseBodyWithDefaults() *AdvisoryResponseBody {
	this := AdvisoryResponseBody{}
	return &this
}

// GetAdvisoryID returns the AdvisoryID field value
func (o *AdvisoryResponseBody) GetAdvisoryID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdvisoryID
}

// GetAdvisoryIDOk returns a tuple with the AdvisoryID field value
// and a boolean to check if the value has been set.
func (o *AdvisoryResponseBody) GetAdvisoryIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdvisoryID, true
}

// SetAdvisoryID sets field value
func (o *AdvisoryResponseBody) SetAdvisoryID(v string) {
	o.AdvisoryID = v
}

// GetOsFamily returns the OsFamily field value
func (o *AdvisoryResponseBody) GetOsFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value
// and a boolean to check if the value has been set.
func (o *AdvisoryResponseBody) GetOsFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsFamily, true
}

// SetOsFamily sets field value
func (o *AdvisoryResponseBody) SetOsFamily(v string) {
	o.OsFamily = v
}

func (o AdvisoryResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["advisoryID"] = o.AdvisoryID
	}
	if true {
		toSerialize["osFamily"] = o.OsFamily
	}
	return json.Marshal(toSerialize)
}

type NullableAdvisoryResponseBody struct {
	value *AdvisoryResponseBody
	isSet bool
}

func (v NullableAdvisoryResponseBody) Get() *AdvisoryResponseBody {
	return v.value
}

func (v *NullableAdvisoryResponseBody) Set(val *AdvisoryResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryResponseBody(val *AdvisoryResponseBody) *NullableAdvisoryResponseBody {
	return &NullableAdvisoryResponseBody{value: val, isSet: true}
}

func (v NullableAdvisoryResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


