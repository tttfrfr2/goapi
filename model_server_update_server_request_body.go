/*
Future Vuls Public API

Future Vuls Public API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerUpdateServerRequestBody struct for ServerUpdateServerRequestBody
type ServerUpdateServerRequestBody struct {
	// Additional information of the server
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	// DefaultUserID of server
	DefaultUserID *int64 `json:"defaultUserID,omitempty"`
	// ServerRoleID of server
	RoleID *int64 `json:"roleID,omitempty"`
	// ServerName of server
	ServerName *string `json:"serverName,omitempty"`
}

// NewServerUpdateServerRequestBody instantiates a new ServerUpdateServerRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerUpdateServerRequestBody() *ServerUpdateServerRequestBody {
	this := ServerUpdateServerRequestBody{}
	return &this
}

// NewServerUpdateServerRequestBodyWithDefaults instantiates a new ServerUpdateServerRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerUpdateServerRequestBodyWithDefaults() *ServerUpdateServerRequestBody {
	this := ServerUpdateServerRequestBody{}
	return &this
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *ServerUpdateServerRequestBody) GetAdditionalInfo() string {
	if o == nil || o.AdditionalInfo == nil {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdateServerRequestBody) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || o.AdditionalInfo == nil {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *ServerUpdateServerRequestBody) HasAdditionalInfo() bool {
	if o != nil && o.AdditionalInfo != nil {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *ServerUpdateServerRequestBody) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetDefaultUserID returns the DefaultUserID field value if set, zero value otherwise.
func (o *ServerUpdateServerRequestBody) GetDefaultUserID() int64 {
	if o == nil || o.DefaultUserID == nil {
		var ret int64
		return ret
	}
	return *o.DefaultUserID
}

// GetDefaultUserIDOk returns a tuple with the DefaultUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdateServerRequestBody) GetDefaultUserIDOk() (*int64, bool) {
	if o == nil || o.DefaultUserID == nil {
		return nil, false
	}
	return o.DefaultUserID, true
}

// HasDefaultUserID returns a boolean if a field has been set.
func (o *ServerUpdateServerRequestBody) HasDefaultUserID() bool {
	if o != nil && o.DefaultUserID != nil {
		return true
	}

	return false
}

// SetDefaultUserID gets a reference to the given int64 and assigns it to the DefaultUserID field.
func (o *ServerUpdateServerRequestBody) SetDefaultUserID(v int64) {
	o.DefaultUserID = &v
}

// GetRoleID returns the RoleID field value if set, zero value otherwise.
func (o *ServerUpdateServerRequestBody) GetRoleID() int64 {
	if o == nil || o.RoleID == nil {
		var ret int64
		return ret
	}
	return *o.RoleID
}

// GetRoleIDOk returns a tuple with the RoleID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdateServerRequestBody) GetRoleIDOk() (*int64, bool) {
	if o == nil || o.RoleID == nil {
		return nil, false
	}
	return o.RoleID, true
}

// HasRoleID returns a boolean if a field has been set.
func (o *ServerUpdateServerRequestBody) HasRoleID() bool {
	if o != nil && o.RoleID != nil {
		return true
	}

	return false
}

// SetRoleID gets a reference to the given int64 and assigns it to the RoleID field.
func (o *ServerUpdateServerRequestBody) SetRoleID(v int64) {
	o.RoleID = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *ServerUpdateServerRequestBody) GetServerName() string {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerUpdateServerRequestBody) GetServerNameOk() (*string, bool) {
	if o == nil || o.ServerName == nil {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *ServerUpdateServerRequestBody) HasServerName() bool {
	if o != nil && o.ServerName != nil {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *ServerUpdateServerRequestBody) SetServerName(v string) {
	o.ServerName = &v
}

func (o ServerUpdateServerRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalInfo != nil {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if o.DefaultUserID != nil {
		toSerialize["defaultUserID"] = o.DefaultUserID
	}
	if o.RoleID != nil {
		toSerialize["roleID"] = o.RoleID
	}
	if o.ServerName != nil {
		toSerialize["serverName"] = o.ServerName
	}
	return json.Marshal(toSerialize)
}

type NullableServerUpdateServerRequestBody struct {
	value *ServerUpdateServerRequestBody
	isSet bool
}

func (v NullableServerUpdateServerRequestBody) Get() *ServerUpdateServerRequestBody {
	return v.value
}

func (v *NullableServerUpdateServerRequestBody) Set(val *ServerUpdateServerRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableServerUpdateServerRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableServerUpdateServerRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerUpdateServerRequestBody(val *ServerUpdateServerRequestBody) *NullableServerUpdateServerRequestBody {
	return &NullableServerUpdateServerRequestBody{value: val, isSet: true}
}

func (v NullableServerUpdateServerRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerUpdateServerRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


